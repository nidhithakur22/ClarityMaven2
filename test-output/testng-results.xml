<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-09-01T13:12:01 IST" name="Default suite" finished-at="2022-09-01T13:13:24 IST" duration-ms="82774">
    <groups>
    </groups>
    <test started-at="2022-09-01T13:12:01 IST" name="Default test" finished-at="2022-09-01T13:13:24 IST" duration-ms="82774">
      <class name="tests.VerifyOQRecordsTest">
        <test-method is-config="true" signature="classLevelSetup()[pri:0, instance:tests.VerifyOQRecordsTest@22ff4249]" started-at="2022-09-01T13:12:01 IST" name="classLevelSetup" finished-at="2022-09-01T13:12:04 IST" duration-ms="2892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classLevelSetup -->
        <test-method is-config="true" signature="methodLevelSetup()[pri:0, instance:tests.VerifyOQRecordsTest@22ff4249]" started-at="2022-09-01T13:12:04 IST" name="methodLevelSetup" finished-at="2022-09-01T13:12:04 IST" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- methodLevelSetup -->
        <test-method signature="VerifyOQrecords(java.lang.reflect.Method)[pri:0, instance:tests.VerifyOQRecordsTest@22ff4249]" started-at="2022-09-01T13:12:04 IST" name="VerifyOQrecords" description="Workforce" finished-at="2022-09-01T13:13:23 IST" duration-ms="79318" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.VerifyOQRecordsTest.VerifyOQrecords(java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:946)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:336)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:280)
at pages.VerfiyEmployeeRecordPage.verifyOQEmployeeRecords(VerfiyEmployeeRecordPage.java:68)
at tests.VerifyOQRecordsTest.VerifyOQrecords(VerifyOQRecordsTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOQrecords -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.VerifyOQRecordsTest@22ff4249]" started-at="2022-09-01T13:13:23 IST" name="teardown" finished-at="2022-09-01T13:13:24 IST" duration-ms="398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.VerifyOQRecordsTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
